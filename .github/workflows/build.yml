name: Super Simple GH Actions CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: get version
      id: get-version
      run: |
        echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Set short git commit SHA
      run: |
        calculatedSha=(`echo ${{ github.sha }} | cut -c1-7`)
        echo "SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
    - name: Confirm git commit SHA output
      run: echo ${{ env.SHORT_SHA }}

    - name: Checkout codebase
      uses: actions/checkout@v4

    - name: Configure AWS Creds
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.APP_NAME }}-repo
        IMAGE_TAG: ${{ env.SHORT_SHA }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.APP_NAME }}-cluster \
          --service ${{ secrets.APP_NAME }}-service \
          --force-new-deployment

